<?php

namespace Jungle\Example\Css;

/**
 * SLR parser
 *
 * WARNING! THIS FILE AUTO GENERATED by JUNGLE. DO NOT EDIT IT!
 */
class Parser
{

    /**
     * Syntax analyse action table
     */
    protected $action = array(0=>array(40=>array(0=>0,1=>1,),41=>array(0=>0,1=>2,),42=>array(0=>0,1=>3,),43=>array(0=>0,1=>4,),44=>array(0=>0,1=>5,),2=>array(0=>0,1=>6,),4=>array(0=>0,1=>7,),3=>array(0=>0,1=>8,),5=>array(0=>0,1=>9,),),1=>array(45=>array(0=>2,),),2=>array(42=>array(0=>0,1=>10,),43=>array(0=>0,1=>4,),44=>array(0=>0,1=>5,),2=>array(0=>0,1=>6,),4=>array(0=>0,1=>7,),3=>array(0=>0,1=>8,),5=>array(0=>0,1=>9,),45=>array(0=>1,1=>0,2=>1,3=>40,),),3=>array(45=>array(0=>1,1=>1,2=>1,3=>41,),7=>array(0=>1,1=>1,2=>1,3=>41,),2=>array(0=>1,1=>1,2=>1,3=>41,),4=>array(0=>1,1=>1,2=>1,3=>41,),5=>array(0=>1,1=>1,2=>1,3=>41,),3=>array(0=>1,1=>1,2=>1,3=>41,),),4=>array(8=>array(0=>0,1=>11,),7=>array(0=>0,1=>12,),),5=>array(2=>array(0=>0,1=>13,),4=>array(0=>0,1=>14,),5=>array(0=>0,1=>15,),3=>array(0=>0,1=>16,),8=>array(0=>1,1=>2,2=>1,3=>43,),7=>array(0=>1,1=>2,2=>1,3=>43,),),6=>array(8=>array(0=>1,1=>3,2=>1,3=>44,),7=>array(0=>1,1=>3,2=>1,3=>44,),2=>array(0=>1,1=>3,2=>1,3=>44,),4=>array(0=>1,1=>3,2=>1,3=>44,),5=>array(0=>1,1=>3,2=>1,3=>44,),3=>array(0=>1,1=>3,2=>1,3=>44,),),7=>array(8=>array(0=>1,1=>3,2=>1,3=>44,),7=>array(0=>1,1=>3,2=>1,3=>44,),2=>array(0=>1,1=>3,2=>1,3=>44,),4=>array(0=>1,1=>3,2=>1,3=>44,),5=>array(0=>1,1=>3,2=>1,3=>44,),3=>array(0=>1,1=>3,2=>1,3=>44,),),8=>array(8=>array(0=>0,1=>17,),),9=>array(8=>array(0=>1,1=>3,2=>1,3=>44,),7=>array(0=>1,1=>3,2=>1,3=>44,),2=>array(0=>1,1=>3,2=>1,3=>44,),4=>array(0=>1,1=>3,2=>1,3=>44,),5=>array(0=>1,1=>3,2=>1,3=>44,),3=>array(0=>1,1=>3,2=>1,3=>44,),),10=>array(45=>array(0=>1,1=>4,2=>2,3=>41,),7=>array(0=>1,1=>4,2=>2,3=>41,),2=>array(0=>1,1=>4,2=>2,3=>41,),4=>array(0=>1,1=>4,2=>2,3=>41,),5=>array(0=>1,1=>4,2=>2,3=>41,),3=>array(0=>1,1=>4,2=>2,3=>41,),),11=>array(46=>array(0=>0,1=>18,),17=>array(0=>0,1=>19,),36=>array(0=>0,1=>20,),38=>array(0=>0,1=>21,),),12=>array(44=>array(0=>0,1=>22,),2=>array(0=>0,1=>6,),4=>array(0=>0,1=>7,),3=>array(0=>0,1=>8,),5=>array(0=>0,1=>9,),),13=>array(8=>array(0=>1,1=>5,2=>2,3=>44,),7=>array(0=>1,1=>5,2=>2,3=>44,),2=>array(0=>1,1=>5,2=>2,3=>44,),4=>array(0=>1,1=>5,2=>2,3=>44,),5=>array(0=>1,1=>5,2=>2,3=>44,),3=>array(0=>1,1=>5,2=>2,3=>44,),),14=>array(8=>array(0=>1,1=>5,2=>2,3=>44,),7=>array(0=>1,1=>5,2=>2,3=>44,),2=>array(0=>1,1=>5,2=>2,3=>44,),4=>array(0=>1,1=>5,2=>2,3=>44,),5=>array(0=>1,1=>5,2=>2,3=>44,),3=>array(0=>1,1=>5,2=>2,3=>44,),),15=>array(8=>array(0=>1,1=>5,2=>2,3=>44,),7=>array(0=>1,1=>5,2=>2,3=>44,),2=>array(0=>1,1=>5,2=>2,3=>44,),4=>array(0=>1,1=>5,2=>2,3=>44,),5=>array(0=>1,1=>5,2=>2,3=>44,),3=>array(0=>1,1=>5,2=>2,3=>44,),),16=>array(8=>array(0=>1,1=>5,2=>2,3=>44,),7=>array(0=>1,1=>5,2=>2,3=>44,),2=>array(0=>1,1=>5,2=>2,3=>44,),4=>array(0=>1,1=>5,2=>2,3=>44,),5=>array(0=>1,1=>5,2=>2,3=>44,),3=>array(0=>1,1=>5,2=>2,3=>44,),),17=>array(9=>array(0=>0,1=>23,),),18=>array(13=>array(0=>0,1=>24,),),19=>array(47=>array(0=>0,1=>25,),18=>array(0=>0,1=>26,),25=>array(0=>0,1=>27,),28=>array(0=>0,1=>28,),29=>array(0=>0,1=>29,),),20=>array(32=>array(0=>0,1=>30,),),21=>array(8=>array(0=>0,1=>31,),),22=>array(2=>array(0=>0,1=>13,),4=>array(0=>0,1=>14,),5=>array(0=>0,1=>15,),3=>array(0=>0,1=>16,),8=>array(0=>1,1=>6,2=>3,3=>43,),7=>array(0=>1,1=>6,2=>3,3=>43,),),23=>array(10=>array(0=>0,1=>32,),),24=>array(45=>array(0=>1,1=>7,2=>4,3=>42,),7=>array(0=>1,1=>7,2=>4,3=>42,),2=>array(0=>1,1=>7,2=>4,3=>42,),4=>array(0=>1,1=>7,2=>4,3=>42,),5=>array(0=>1,1=>7,2=>4,3=>42,),3=>array(0=>1,1=>7,2=>4,3=>42,),),25=>array(32=>array(0=>0,1=>33,),),26=>array(19=>array(0=>0,1=>34,),),27=>array(19=>array(0=>0,1=>35,),),28=>array(19=>array(0=>0,1=>36,),),29=>array(19=>array(0=>0,1=>37,),),30=>array(8=>array(0=>0,1=>38,),),31=>array(9=>array(0=>0,1=>39,),),32=>array(11=>array(0=>0,1=>40,),),33=>array(8=>array(0=>0,1=>41,),),34=>array(48=>array(0=>0,1=>42,),0=>array(0=>0,1=>43,),3=>array(0=>0,1=>44,),),35=>array(49=>array(0=>0,1=>45,),50=>array(0=>0,1=>46,),27=>array(0=>0,1=>47,),1=>array(0=>0,1=>48,),26=>array(0=>0,1=>49,),),36=>array(49=>array(0=>0,1=>50,),50=>array(0=>0,1=>46,),27=>array(0=>0,1=>47,),1=>array(0=>0,1=>48,),26=>array(0=>0,1=>49,),),37=>array(3=>array(0=>0,1=>51,),),38=>array(9=>array(0=>0,1=>52,),),39=>array(10=>array(0=>0,1=>53,),),40=>array(12=>array(0=>0,1=>54,),),41=>array(9=>array(0=>0,1=>55,),),42=>array(22=>array(0=>0,1=>56,),0=>array(0=>0,1=>57,),3=>array(0=>0,1=>58,),20=>array(0=>0,1=>59,),21=>array(0=>0,1=>60,),),43=>array(22=>array(0=>1,1=>0,2=>1,3=>48,),0=>array(0=>1,1=>0,2=>1,3=>48,),3=>array(0=>1,1=>0,2=>1,3=>48,),20=>array(0=>1,1=>0,2=>1,3=>48,),21=>array(0=>1,1=>0,2=>1,3=>48,),),44=>array(22=>array(0=>1,1=>0,2=>1,3=>48,),0=>array(0=>1,1=>0,2=>1,3=>48,),3=>array(0=>1,1=>0,2=>1,3=>48,),20=>array(0=>1,1=>0,2=>1,3=>48,),21=>array(0=>1,1=>0,2=>1,3=>48,),),45=>array(22=>array(0=>0,1=>61,),),46=>array(50=>array(0=>0,1=>62,),1=>array(0=>0,1=>48,),26=>array(0=>0,1=>49,),22=>array(0=>1,1=>8,2=>1,3=>49,),),47=>array(22=>array(0=>1,1=>9,2=>1,3=>49,),),48=>array(1=>array(0=>1,1=>0,2=>1,3=>50,),26=>array(0=>1,1=>0,2=>1,3=>50,),22=>array(0=>1,1=>0,2=>1,3=>50,),),49=>array(1=>array(0=>1,1=>0,2=>1,3=>50,),26=>array(0=>1,1=>0,2=>1,3=>50,),22=>array(0=>1,1=>0,2=>1,3=>50,),),50=>array(22=>array(0=>0,1=>63,),),51=>array(8=>array(0=>0,1=>64,),),52=>array(10=>array(0=>0,1=>65,),),53=>array(39=>array(0=>0,1=>66,),),54=>array(13=>array(0=>0,1=>67,),),55=>array(10=>array(0=>0,1=>68,),),56=>array(10=>array(0=>0,1=>69,),),57=>array(22=>array(0=>1,1=>0,2=>2,3=>48,),0=>array(0=>1,1=>0,2=>2,3=>48,),3=>array(0=>1,1=>0,2=>2,3=>48,),20=>array(0=>1,1=>0,2=>2,3=>48,),21=>array(0=>1,1=>0,2=>2,3=>48,),),58=>array(22=>array(0=>1,1=>0,2=>2,3=>48,),0=>array(0=>1,1=>0,2=>2,3=>48,),3=>array(0=>1,1=>0,2=>2,3=>48,),20=>array(0=>1,1=>0,2=>2,3=>48,),21=>array(0=>1,1=>0,2=>2,3=>48,),),59=>array(22=>array(0=>1,1=>0,2=>2,3=>48,),0=>array(0=>1,1=>0,2=>2,3=>48,),3=>array(0=>1,1=>0,2=>2,3=>48,),20=>array(0=>1,1=>0,2=>2,3=>48,),21=>array(0=>1,1=>0,2=>2,3=>48,),),60=>array(22=>array(0=>1,1=>0,2=>2,3=>48,),0=>array(0=>1,1=>0,2=>2,3=>48,),3=>array(0=>1,1=>0,2=>2,3=>48,),20=>array(0=>1,1=>0,2=>2,3=>48,),21=>array(0=>1,1=>0,2=>2,3=>48,),),61=>array(10=>array(0=>0,1=>70,),),62=>array(50=>array(0=>0,1=>71,),1=>array(0=>0,1=>48,),26=>array(0=>0,1=>49,),22=>array(0=>1,1=>10,2=>2,3=>49,),),63=>array(10=>array(0=>0,1=>72,),),64=>array(9=>array(0=>0,1=>73,),),65=>array(37=>array(0=>0,1=>74,),),66=>array(31=>array(0=>0,1=>75,),),67=>array(14=>array(0=>0,1=>76,),),68=>array(33=>array(0=>0,1=>77,),),69=>array(11=>array(0=>0,1=>78,),),70=>array(11=>array(0=>0,1=>79,),),71=>array(50=>array(0=>0,1=>80,),1=>array(0=>0,1=>48,),26=>array(0=>0,1=>49,),22=>array(0=>1,1=>11,2=>3,3=>49,),),72=>array(11=>array(0=>0,1=>81,),),73=>array(10=>array(0=>0,1=>82,),),74=>array(31=>array(0=>0,1=>83,),),75=>array(13=>array(0=>1,1=>0,2=>6,3=>46,),),76=>array(4=>array(0=>0,1=>84,),),77=>array(34=>array(0=>0,1=>85,),),78=>array(23=>array(0=>0,1=>86,),),79=>array(23=>array(0=>0,1=>87,),),80=>array(22=>array(0=>1,1=>12,2=>4,3=>49,),),81=>array(23=>array(0=>0,1=>88,),),82=>array(11=>array(0=>0,1=>89,),),83=>array(13=>array(0=>1,1=>0,2=>7,3=>46,),),84=>array(15=>array(0=>0,1=>90,),),85=>array(10=>array(0=>0,1=>91,),),86=>array(24=>array(0=>0,1=>92,),),87=>array(24=>array(0=>0,1=>93,),),88=>array(24=>array(0=>0,1=>94,),),89=>array(23=>array(0=>0,1=>95,),),90=>array(16=>array(0=>0,1=>96,),),91=>array(35=>array(0=>0,1=>97,),),92=>array(32=>array(0=>1,1=>0,2=>8,3=>47,),),93=>array(32=>array(0=>1,1=>0,2=>8,3=>47,),),94=>array(32=>array(0=>1,1=>0,2=>8,3=>47,),),95=>array(30=>array(0=>0,1=>98,),),96=>array(8=>array(0=>1,1=>0,2=>11,3=>44,),7=>array(0=>1,1=>0,2=>11,3=>44,),2=>array(0=>1,1=>0,2=>11,3=>44,),4=>array(0=>1,1=>0,2=>11,3=>44,),5=>array(0=>1,1=>0,2=>11,3=>44,),3=>array(0=>1,1=>0,2=>11,3=>44,),),97=>array(31=>array(0=>0,1=>99,),),98=>array(31=>array(0=>0,1=>100,),),99=>array(13=>array(0=>1,1=>0,2=>11,3=>46,),),100=>array(32=>array(0=>1,1=>0,2=>10,3=>47,),),);

    /**
     * Tokens stack
     *
     * @var \SplStack
     */
    protected $stack = null;

    public function parse($data)
    {
        $tokens = $this->tokenizer($data);
        $this->stack = new \SplStack();
        $this->stack->push(0);

        while (true) {
            $token = $tokens[0];
            $state = $this->stack->top();
            $terminal = $token[0];

            if (!isset($this->action[$state][$terminal])) {
                throw new \Exception('Token not allowed here (' . $token[1] . ')');
            }

            $action = $this->action[$state][$terminal];
            if ($action[0] === 0) {
                $this->stack->push($token[1]);
                $this->stack->push($action[1]);
                array_shift($tokens);
            } elseif ($action[0] === 1) {
                $value = $this->reduce($action[2], $action[1]);
                array_unshift($tokens, array($action[3], $value));
            } elseif ($action[0] === 2) {
                $this->stack->pop();
                return $this->stack->pop();
            } else {
                throw new \RuntimeException('Cannot compile');
            }
        }

        throw new \RuntimeException('Cannot compile. EOF');
    }

    protected function tokenizer($data)
    {
        $tokens = [];
        while (strlen($data) !== 0) {
            $token = $this->getNextToken($data);
            $data = trim(substr($data, strlen($token[1])));
            $tokens[] = $token;
        }
        $tokens[] = array(45, '');
        return $tokens;
    }

    protected function getNextToken($data)
    {
        if ('auto' === substr($data, 0, 4)) {
            return [26, 'auto'];
        }

        if ('inherit' === substr($data, 0, 7)) {
            return [27, 'inherit'];
        }

        if ('\'margin' === substr($data, 0, 7)) {
            return [28, '\'margin'];
        }

        if ('\'name' === substr($data, 0, 5)) {
            return [29, '\'name'];
        }

        if ('\'padding' === substr($data, 0, 8)) {
            return [25, '\'padding'];
        }

        if ('$3);}\'' === substr($data, 0, 6)) {
            return [24, '$3);}\''];
        }

        if ('repeate-y' === substr($data, 0, 9)) {
            return [21, 'repeate-y'];
        }

        if ('{$$' === substr($data, 0, 3)) {
            return [22, '{$$'];
        }

        if ('Rule($1,' === substr($data, 0, 8)) {
            return [23, 'Rule($1,'];
        }

        if ('$3);' === substr($data, 0, 4)) {
            return [30, '$3);'];
        }

        if ('}\'' === substr($data, 0, 2)) {
            return [31, '}\''];
        }

        if ('array($1);' === substr($data, 0, 10)) {
            return [37, 'array($1);'];
        }

        if ('\'' === substr($data, 0, 1)) {
            return [38, '\''];
        }

        if ('array();' === substr($data, 0, 8)) {
            return [39, 'array();'];
        }

        if ('\'rule' === substr($data, 0, 5)) {
            return [36, '\'rule'];
        }

        if ('$2;' === substr($data, 0, 3)) {
            return [35, '$2;'];
        }

        if (';' === substr($data, 0, 1)) {
            return [32, ';'];
        }

        if ('$1;' === substr($data, 0, 3)) {
            return [33, '$1;'];
        }

        if ('$$[]' === substr($data, 0, 4)) {
            return [34, '$$[]'];
        }

        if ('repeate-x' === substr($data, 0, 9)) {
            return [20, 'repeate-x'];
        }

        if (':' === substr($data, 0, 1)) {
            return [19, ':'];
        }

        if ('new' === substr($data, 0, 3)) {
            return [11, 'new'];
        }

        if ('Selector($1);' === substr($data, 0, 13)) {
            return [12, 'Selector($1);'];
        }

        if ('$$' === substr($data, 0, 2)) {
            return [9, '$$'];
        }

        if ('{' === substr($data, 0, 1)) {
            return [8, '{'];
        }

        if (',' === substr($data, 0, 1)) {
            return [7, ','];
        }

        if ('}' === substr($data, 0, 1)) {
            return [13, '}'];
        }

        if ('=' === substr($data, 0, 1)) {
            return [10, '='];
        }

        if ('\'rules' === substr($data, 0, 6)) {
            return [17, '\'rules'];
        }

        if ('#' === substr($data, 0, 1)) {
            return [14, '#'];
        }

        if ('fact' === substr($data, 0, 4)) {
            return [16, 'fact'];
        }

        if ('\'background' === substr($data, 0, 11)) {
            return [18, '\'background'];
        }

        if ('in' === substr($data, 0, 2)) {
            return [15, 'in'];
        }

        if (preg_match('/^url\\([^)]+\\)/i', $data, $match)) {
            return [0, $match[0]];
        }

        if (preg_match('/^(-?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)(px|%|em|pt)?)/', $data, $match)) {
            return [1, $match[0]];
        }

        if (preg_match('/^\\.[-_a-z0-9]+\\s?/Si', $data, $match)) {
            return [2, $match[0]];
        }

        if (preg_match('/^#[0-9a-f]{1,6}\\s?/i', $data, $match)) {
            return [3, $match[0]];
        }

        if (preg_match('/^#[-_a-z0-9]+\\s?/i', $data, $match)) {
            return [4, $match[0]];
        }

        if (preg_match('/^(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|big|blockqoute|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|h[1-6r]|head|header|hgroup|html|i|iframe|img|input|ins|kdb|keygen|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thread|time|title|tr|track|tt|u|ul|var|video|wbr)(?![a-z])\\s?/', $data, $match)) {
            return [5, $match[0]];
        }

        if (preg_match('/^[a-z-]+/', $data, $match)) {
            return [6, $match[0]];
        }

        throw new \Exception("Syntax error. Cannot parse '" . substr($data, 0, 100) . "'");
    }

    protected function reduce($count, $index)
    {
        $args = array();
        for ($i = 0; $i < $count; $i++) {
            $this->stack->pop();
            $args[] = $this->stack->pop();
        }

        return call_user_func_array([$this, 'reduce' . $index], array_reverse($args));
    }

    protected function reduce0($a = null)
    {
        $returnValue = $a;
        return $returnValue;
    }

    protected function reduce1($a = null)
    {
        $returnValue = new Document(); $returnValue->addBlock($a);
        return $returnValue;
    }

    protected function reduce2($a = null)
    {
        $returnValue = array($a);
        return $returnValue;
    }

    protected function reduce3($a = null)
    {
        $returnValue = new Selector($a);
        return $returnValue;
    }

    protected function reduce4($a = null, $b = null)
    {
        $a->addBlock($b); $returnValue = $a;
        return $returnValue;
    }

    protected function reduce5($a = null, $b = null)
    {
        $returnValue = $a; $a->addSelector($b);
        return $returnValue;
    }

    protected function reduce6($a = null, $b = null, $c = null)
    {
        $returnValue = $a; $returnValue[] = $c;
        return $returnValue;
    }

    protected function reduce7($a = null, $b = null, $c = null)
    {
        $returnValue = new Block($a, $c);
        return $returnValue;
    }

    protected function reduce8($a = null)
    {
        $returnValue = [$a];
        return $returnValue;
    }

    protected function reduce9()
    {
        $returnValue = ['inherit'];
        return $returnValue;
    }

    protected function reduce10($a = null, $b = null)
    {
        $returnValue = [$a, $b];
        return $returnValue;
    }

    protected function reduce11($a = null, $b = null, $c = null)
    {
        $returnValue = [$a, $b, $c];
        return $returnValue;
    }

    protected function reduce12($a = null, $b = null, $c = null, $d = null)
    {
        $returnValue = [$a, $b, $c, $d];
        return $returnValue;
    }


}
